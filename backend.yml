- name: configuring mysql server
  hosts: backend
  become: yes
  tasks:
  - name: disable nodejs
    ansible.builtin.command: dnf module disable nodejs -y


  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: installing mysql-server
    ansible.builtin.package:
      name: "{{item}}"
      state: present  
    loop:
    - nodejs
    - mysql  

  - name: Add the user 
    ansible.builtin.user:
     name: expense


  - name: Creates directory
    ansible.builtin.file:
     path: /app
     state: directory   




  - name: Download the code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip


  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes   

  - name: installing dependencies
    ansible.builtin.command: npm install 
    args:
     chdir: /app    


  - name: Copy file with owner and permissions
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: installing PYMSQL 
    ansible.builtin.pip:
      name:
      - PyMySQL 
      - cryptography   


  - name: Try to create database as root/nopassword first. If not allowed, pass the credentials
    community.mysql.mysql_db:
      name: all
      state: import
    
      login_user: ec2-user
      login_password: ExpenseApp@1
      login_host: mysql.daws83s.shop
      target: /app/schema/backend.sql
        
   




      